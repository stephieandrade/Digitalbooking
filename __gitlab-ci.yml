image: docker:latest

services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_REGION: $AWS_REGION
  S3_BUCKET_NAME: $S3_BUCKET_NAME
  CDN_DISTRIBUTION_ID: $CDN_DISTRIBUTION_ID


cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/

Build:
  stage: build
  when: manual
  image: node:14
  script:
    - cd Frontend
    - yarn install
    - CI=false yarn build
  artifacts:
    paths:
      - Frontend/build
    expire_in: 1 hour
  only:
    - front_dev

Deploy:
  stage: deploy
  when: manual
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - eval $(aws ecr get-login --no-include-email --region $AWS_REGION | sed 's|https://||')
  script:
    - aws s3 cp Frontend/build s3://$S3_BUCKET_NAME/front_dev/ --recursive --include "*"
    - aws cloudfront create-invalidation --distribution-id $CDN_DISTRIBUTION_ID --paths "/*"
  only:
    - front_dev

# docker-build-qa:
#   image: docker:latest
#   stage: test
#   services:
#     - docker:dind

#   before_script:
#     - export TAG=${CI_COMMIT_SHORT_SHA}-${CI_JOB_ID}
#     - docker login $CI_REGISTRY -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  
#   script:
#     - docker build -t $CI_REGISTRY/${CI_PROJECT_PATH}:$TAG .
#     - docker push $CI_REGISTRY/${CI_PROJECT_PATH}:$TAG

#     - docker tag $CI_REGISTRY/${CI_PROJECT_PATH}:$TAG $CI_REGISTRY/${CI_PROJECT_PATH}:latest
#     - docker push $CI_REGISTRY/${CI_PROJECT_PATH}:latest
#   only:
#     - test